git add . (add all files in current directory to track)
git add -A (add all files in the tree)

git commit -a -m "commit-message" (commits all modified files that are tracked)

(USE -a flag for commit if all files are tracked; can skip adding proces this way)


git push origin master (push back to original repository)


IF GIT PUSH FAILS:

git pull

Check the files for conflicts, FIX the conflicts which look like this inside the file:

<<<<HEAD marker will show the

original code

======= SEPARATOR MARKER

conflicting code

<<<<RANDOM_ID GIVEN BY GIT

delete the markers;
delete the code you want to throw away (the original code or the conflicting code);
then push back with: git push origin master;


How does git pull work???:
First it downloads the current project and then "merges" it with your file (without erasing anything from both versions);
Any conflicts will show in between markers.

imagine it like this:
both people download the main repo (the same version):
repo#1 repo#2

repo#1 is edited and repo#2 is edited at the same time;

repo#1 is pushed back to main;
repo#2 if pushed to main will cause an error;
repo#2 pulls;
repo#2 += repo1 - repo2 (add differences in content);
repo#2 fixes the merge;
repo#2 is push back to main;
